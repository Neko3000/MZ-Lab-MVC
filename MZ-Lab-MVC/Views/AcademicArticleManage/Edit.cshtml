@model MZ_Lab_MVC.ViewModels.AcademicArticleEditViewModel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_LayoutBracket.cshtml";
}

<div class="pageheader">
    <h2><i class="fa fa-edit"></i> AcademicArticleManage<span>学術文章を管理する.</span></h2>
    <div class="breadcrumb-wrapper">
        <span class="label">You are here:</span>
        <ol class="breadcrumb">
            <li><a href="@Url.Action("Index","SystemManage")">Background</a></li>
            <li>AcademicArticle</li>
            <li><a href="@Url.Action("Index","AcademicArticle")">Article List</a></li>
            <li class="active">Edit</li>
        </ol>
    </div>
</div>

<div class="contentpanel">
    @using (Html.BeginForm("Edit", "AcademicArticleManage", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal form-bordered", enctype = "multipart/form-data" }))
    {
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="panel-btns">
                    <a class="panel-close"></a>
                    <a class="minimize"></a>
                </div>
                <h4 class="panel-title">Edit</h4>
                <p>学術文章の情報を編集する.</p>
            </div>

            @Html.AntiForgeryToken()
            @Html.ValidationSummary()
            @Html.HiddenFor(model => model.Id)

            <div class="panel-body panel-body-nopadding">

                <div class="form-group">
                    @Html.LabelFor(model => model.CoverImgUrl, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-6">
                        <img src="@Url.Content(Model.CoverImgUrl)" />
                        @Html.EditorFor(model => model.CoverImg, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
                        @Html.ValidationMessageFor(model => model.CoverImg, "", new { @class = "text-danger" })
                        <span class="help-block">
                            サイズ[1020px x 100px]の画像を使ってください（指定してない場合はデフォルトの画像を使います）
                        </span>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FullDescription, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-6">
                        @Html.EditorFor(model => model.FullDescription, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
                        @Html.ValidationMessageFor(model => model.FullDescription, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.PostTime, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-6">
                        @Html.EditorFor(model => model.PostTime, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
                        @Html.ValidationMessageFor(model => model.PostTime, "", new { @class = "text-danger" })
                        <span class="help-block">
                            デフォルトのは今の時間
                        </span>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsDetailed, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-6">
                        <label class="control-label">
                            @Html.CheckBoxFor(model => model.IsDetailed, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
                        </label>
                        @Html.ValidationMessageFor(model => model.IsDetailed, "", new { @class = "text-danger" })
                        <span class="help-block">
                            このプロパティをチェックしたら、研究実績のページの文章は「内容」の代わりに、下の情報で表示します <br>
                            公式 - 「作者」+ 「タイトル」+「会議の名前」+「本（雑誌、論文）の情報」+「会議（発表）の時間」+「会議の場所」<br>
                            <br>
                            例: <br>
                            作者 = 出海 絢子, 三木 良介, 宮崎 佳典, 厨子 光政, 法月 健 <br>
                            タイトル = 英単語並び替え問題におけるマウス軌跡再現および迷い抽出を志向した履歴検索Webアプリケーション開発 <br>
                            会議の名前 = 大学英語教育学会（JACET）関東支部大会 <br>
                            本（雑誌、論文）の情 = 日本e-Learning学会論文誌, Vol.16, pp. 73-82 (2016) <br>
                            会議の場所 = 高麗大学（大韓民国ソウル市）<br>
                            会議（発表）の時間 = 2017.2<br>
                            <br>
                            結果:<br>
                            出海 絢子, 三木 良介, 宮崎 佳典, 厨子 光政, 法月 健, 英単語並び替え問題におけるマウス軌跡再現および迷い抽出を志向した履歴検索Webアプリケーション開発, 大学英語教育学会（JACET）関東支部大会, 日本e-Learning学会論文誌, Vol.16, pp. 73-82 (2016). 於 高麗大学（大韓民国ソウル市, 2017.2<br>
                        </span>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-6">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Title_EN, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-6">
                        @Html.EditorFor(model => model.Title_EN, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
                        @Html.ValidationMessageFor(model => model.Title_EN, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EventName, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-6">
                        @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
                        @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EventPlace, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-6">
                        @Html.EditorFor(model => model.EventPlace, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
                        @Html.ValidationMessageFor(model => model.EventPlace, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PublishTime, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-6">
                        @Html.EditorFor(model => model.PublishTime, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
                        @Html.ValidationMessageFor(model => model.PublishTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BookInfo, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-6">
                        @Html.EditorFor(model => model.BookInfo, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
                        @Html.ValidationMessageFor(model => model.BookInfo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Editors, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-6">
                        @Html.EditorFor(model => model.Editors, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
                        @Html.ValidationMessageFor(model => model.Editors, "", new { @class = "text-danger" })
                        <span class="help-block">
                            上の例を参考して、作者をコンマで分割してください
                        </span>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-6">
                        @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
                        @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="panel-footer">
                <div class="row">
                    <div class="col-sm-6 col-sm-offset-3">
                        <button class="btn btn-primary" type="submit">Save</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div><!-- contentpanel -->

@section scripts{

    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script>

        jQuery(document).ready(function () {

            // HTML5 WYSIWYG Editor
            jQuery('#wysiwyg').wysihtml5({ color: true, html: true });

            //read and show img
            function readURL(input) {
                    if (input.files && input.files[0]) {
                        var reader = new FileReader();

                        reader.onload = function (e) {
                        $('#post-img').attr('src', e.target.result);
                        }

                        reader.readAsDataURL(input.files[0]);

                    }
                }

            $("#CoverImg").change(function (e) {
                    readURL(this);
                $('#post-img-path').val(e.target.files[0].name);
                });

            "use strict";

            // Tags Input
            jQuery('#tags').tagsInput({ width: 'auto' });

            // Select2
            jQuery(".select2").select2({
                    width: '100%'
            });

            // Textarea Autogrow
            jQuery('#autoResizeTA').autogrow();

            // Color Picker
            if (jQuery('#colorpicker').length > 0) {
                jQuery('#colorSelector').ColorPicker({
                    onShow: function (colpkr) {
                        jQuery(colpkr).fadeIn(500);
                        return false;
                    },
                    onHide: function (colpkr) {
                        jQuery(colpkr).fadeOut(500);
                        return false;
                    },
                    onChange: function (hsb, hex, rgb) {
                        jQuery('#colorSelector span').css('backgroundColor', '#' + hex);
                        jQuery('#colorpicker').val('#' + hex);
                    }
                });
            }

            // Color Picker Flat Mode
            jQuery('#colorpickerholder').ColorPicker({
                flat: true,
                onChange: function (hsb, hex, rgb) {
                    jQuery('#colorpicker3').val('#' + hex);
                }
            });

            // Date Picker
            jQuery('#datepicker').datepicker();

            jQuery('#datepicker-inline').datepicker();

            jQuery('#datepicker-multiple').datepicker({
                numberOfMonths: 3,
                showButtonPanel: true
            });

            // Spinner
            var spinner = jQuery('#spinner').spinner();
            spinner.spinner('value', 0);

            // Input Masks
            jQuery("#date").mask("99/99/9999");
            jQuery("#phone").mask("(999) 999-9999");
            jQuery("#ssn").mask("999-99-9999");

            // Time Picker
            jQuery('#timepicker').timepicker({ defaultTIme: false });
            jQuery('#timepicker2').timepicker({ showMeridian: false });
            jQuery('#timepicker3').timepicker({ minuteStep: 15 });


        });
    </script>
}

